name: Build Blog from Issues

on:
  push:
    branches: ["main"]
  issues:
    types: [opened, edited, labeled]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Python dependencies
        run: pip install PyGithub
          
      - name: Generate blog posts from issues
        if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'blog')
        run: python .github/scripts/issue_to_post.py  # 修正路径
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          
      - name: Create static site
        run: |
          mkdir -p _site
          echo "<!DOCTYPE html>
          <html>
          <head>
            <title>我的博客</title>
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
              .post { border: 1px solid #ddd; padding: 20px; margin: 10px 0; }
            </style>
          </head>
          <body>
            <h1>我的博客</h1>
            <p>通过 GitHub Issues 自动生成</p>
            <div id='posts'>
              <!-- 文章将在这里显示 -->
            </div>
          </body>
          </html>" > _site/index.html
          
          # 如果有文章，复制到 _site
          if [ -d "_posts" ]; then
            cp -r _posts _site/
            echo "已复制博客文章"
          else
            echo "暂无博客文章"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2